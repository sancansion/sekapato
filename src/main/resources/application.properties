spring.thymeleaf.cache=false
error.whitelabel.enabled=false
spring.mvc.favicon.enabled=false
server.port=8080
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/sekapato

# Username and password
spring.datasource.username = root
spring.datasource.password = sekapato

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



## Mail setting
mail.user.name=job.sekapato
mail.password=69633136
mail.address=job.sekapato@gmail.com
#mail.user.name=info
#mail.password=ByteM0use
#mail.address=info@byte-mouse.com
mail.subject=\u3010HP\u304B\u3089\u306E\u304A\u554F\u3044\u5408\u308F\u305B\u3011

